name: Playwright Tests CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to test'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit

env:
  NODE_VERSION: '20'

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint (if configured)
        run: npm run lint || echo "No lint script found"
        continue-on-error: true

      - name: Type check TypeScript files
        run: npx tsc --noEmit || echo "No TypeScript files to check"
        continue-on-error: true

  test:
    name: Playwright Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.browser }}
        env:
          CI: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30

      - name: Upload trace files
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-traces-${{ matrix.browser }}
          path: test-results/
          retention-days: 7

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Publish Test Summary
        run: |
          echo "## 🎭 Playwright Test Results" >> $GITHUB_STEP_SUMMARY
          echo "| Browser | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY
          
          for browser in chromium firefox webkit; do
            if [ -d "playwright-report-$browser" ]; then
              echo "| $browser | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $browser | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
            fi
          done

  deploy-report:
    name: Deploy Test Report
    runs-on: ubuntu-latest
    needs: test
    if: always() && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
      actions: read
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test reports
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          merge-multiple: true
          path: ./reports

      - name: Create combined report directory
        run: |
          mkdir -p combined-report
          # Copy all browser reports to combined directory
          if [ -d "./reports" ]; then
            find ./reports -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.json" | head -1 | xargs dirname | xargs -I {} cp -r {}/* combined-report/ 2>/dev/null || true
          fi
          # Create index.html if it doesn't exist
          if [ ! -f "combined-report/index.html" ]; then
            echo "<html><body><h1>Playwright Test Reports</h1><p>Reports will be available after tests complete successfully.</p></body></html>" > combined-report/index.html
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./combined-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        continue-on-error: true

      - name: Upload report as artifact (fallback)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: combined-test-report
          path: ./combined-report
          retention-days: 30

      - name: Comment on PR with report link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let reportUrl = '';
            if ('${{ steps.deployment.outputs.page_url }}') {
              reportUrl = '${{ steps.deployment.outputs.page_url }}';
            } else {
              reportUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            }
            
            const comment = `## 🎭 Playwright Test Results
            
            📊 **Test Report**: [View Report](${reportUrl})
            
            The test results are available in the artifacts section if GitHub Pages deployment failed.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
