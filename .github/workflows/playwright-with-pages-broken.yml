name: Playwright Tests CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to test'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - chromium
          - firefox
          - webkit

env:
  NODE_VERSION: '20'

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint (if configured)
        run: npm run lint || echo "No lint script found"
        continue-on-error: true

      - name: Type check TypeScript files
        run: npx tsc --noEmit || echo "No TypeScript files to check"
        continue-on-error: true

  test:
    name: Playwright Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.browser }}
        env:
          CI: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30

      - name: Upload trace files
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-traces-${{ matrix.browser }}
          path: test-results/
          retention-days: 7

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Publish Test Summary
        run: |
          echo "## üé≠ Playwright Test Results" >> $GITHUB_STEP_SUMMARY
          echo "| Browser | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY
          
          for browser in chromium firefox webkit; do
            if [ -d "playwright-report-$browser" ]; then
              echo "| $browser | ‚úÖ Passed |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $browser | ‚ùå Failed |" >> $GITHUB_STEP_SUMMARY
            fi
          done

  combine-reports:
    name: Combine Test Reports
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: Download all test reports
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          merge-multiple: true
          path: ./all-reports

      - name: Create combined report
        run: |
          mkdir -p combined-report
          
          # Find the first HTML report and copy its structure
          FIRST_REPORT=$(find ./all-reports -name "index.html" | head -1)
          if [ -n "$FIRST_REPORT" ]; then
            REPORT_DIR=$(dirname "$FIRST_REPORT")
            cp -r "$REPORT_DIR"/* combined-report/ 2>/dev/null || true
            echo "‚úÖ Combined report created successfully"
          else
            # Create a simple index if no reports found
            cat > combined-report/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Playwright Test Reports</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  .header { color: #2d3748; margin-bottom: 20px; }
                  .status { padding: 10px; border-radius: 5px; margin: 10px 0; }
                  .success { background-color: #c6f6d5; color: #22543d; }
                  .info { background-color: #bee3f8; color: #2a4365; }
              </style>
          </head>
          <body>
              <h1 class="header">üé≠ Playwright Test Reports</h1>
              <div class="status info">
                  <strong>‚ÑπÔ∏è Information:</strong> Test reports will be available after successful test execution.
              </div>
              <div class="status success">
                  <strong>‚úÖ Status:</strong> Check the GitHub Actions artifacts for detailed test results.
              </div>
              <p>Visit the <a href="https://github.com/${{ github.repository }}/actions">GitHub Actions page</a> to download test artifacts.</p>
          </body>
          </html>
          EOF
            echo "üìù Created placeholder report"
          fi

      - name: Upload combined report
        uses: actions/upload-artifact@v4
        with:
          name: combined-test-report
          path: ./combined-report
          retention-days: 30

      - name: Create test summary
        run: |
          echo "## üé≠ Playwright Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìä Test Execution Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Browser | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY
          
          for browser in chromium firefox webkit; do
            if [ -d "./all-reports" ] && find ./all-reports -name "*$browser*" | grep -q .; then
              echo "| $browser | ‚úÖ Completed |" >> $GITHUB_STEP_SUMMARY
            else
              echo "| $browser | ‚ùå Failed |" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìÅ Available Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- **combined-test-report**: Merged HTML report from all browsers" >> $GITHUB_STEP_SUMMARY
          echo "- **playwright-report-[browser]**: Individual browser reports" >> $GITHUB_STEP_SUMMARY
          echo "- **playwright-traces-[browser]**: Debug traces (on failure)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîó Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Download Combined Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- [View All Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
